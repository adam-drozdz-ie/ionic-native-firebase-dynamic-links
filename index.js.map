{"version":3,"sources":["../../../src/@ionic-native/plugins/firebase-dynamic-links/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,MAAA,EAAQ,OAAA,EAAS,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AASxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmDG;AAWH,IAAa,oBAAoB;IAAS,wCAAiB;IAA3D;;IAuBA,CAAC;IArBC;;;OAGG;IAEH,4CAAa,GAAb,cAAgC,MAAM,CAAC,CAAC,CAAC;IAEzC;;;;OAIG;IAEH,6CAAc,GAAd,UAAe,OAA4B,IAAkB,MAAM,CAAC,CAAC,CAAC;IAQxE,2BAAC;AAAD,CAvBA,AAuBC,CAvByC,iBAAiB,GAuB1D;AANM,+BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAfA;IADC,OAAO,EAAE;;;;yDAC+B;AAQzC;IADC,OAAO,EAAE;;;;0DAC4D;AAf3D,oBAAoB;IAVhC,MAAM,CAAC;QACN,UAAU,EAAE,sBAAsB;QAClC,MAAM,EAAE,uCAAuC;QAC/C,SAAS,EAAE,uCAAuC;QAClD,IAAI,EAAE,oEAAoE;QAC1E,OAAO,EAAE,kIAAkI;QAC3I,gBAAgB,EAAE,CAAC,YAAY,EAAE,UAAU,CAAC;QAC5C,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,oBAAoB,CAuBhC;SAvBY,oBAAoB","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\r\n\r\nexport interface DynamicLinksOptions {\r\n  title: string;\r\n  message: string;\r\n  deepLink?: string;\r\n  callToActionText?: string;\r\n}\r\n\r\n/**\r\n * @beta\r\n * @name Firebase Dynamic Links\r\n * @description\r\n * Cordova plugin for Firebase Invites and Firebase Dynamic Links\r\n *\r\n * Variables APP_DOMAIN and APP_PATH specify web URL where your app will start an activity to handle the link. They also used to setup support for App Indexing.\r\n *\r\n * Go to firebase console and export google-services.json and GoogleService-Info.plist. Put those files into the root of your cordova app folder.\r\n *\r\n * Preferences:\r\n *\r\n * Preferences GoogleIOSClientId and GoogleAndroidClientId are used to setup dynamic links when you have an app for several platforms.\r\n * You can find values at your GoogleService-Info.plist (key ANDROID_CLIENT_ID) and google-services.json (key client[0].oauth_client[0].client_id).\r\n *\r\n *config.xml:\r\n * ```xml\r\n * <platform name=\"android\">\r\n *     <preference name=\"GoogleIOSClientId\" value=\"...\" />\r\n * </platform>\r\n * <platform name=\"ios\">\r\n *     <preference name=\"GoogleAndroidClientId\" value=\"...\" />\r\n * </platform>\r\n * ```\r\n * @usage\r\n * ```typescript\r\n * import { FirebaseDynamicLinks } from '@ionic-native/firebase-dynamic-links';\r\n *\r\n *\r\n * constructor(private firebaseDynamicLinks: FirebaseDynamicLinks) { }\r\n *\r\n * ...\r\n * // The deepLink and callToActionText properties are optional\r\n * const options: DynamicLinksOptions = {\r\n *   title: 'My Title';\r\n *   message: 'My message';\r\n *   deepLink: 'http://example.com/';\r\n *   callToActionText: 'Message on button';\r\n * }\r\n *\r\n * this.firebaseDynamicLinks.sendInvitation(options)\r\n *   .then((res: any) => console.log(res))\r\n *   .catch((error: any) => console.error(error));\r\n *\r\n * this.firebaseDynamicLinks.onDynamicLink()\r\n *   .then((res: any) => console.log(res)) //Handle the logic here after opening the app with the Dynamic link\r\n *   .catch((error:any) => console.log(error));\r\n * ```\r\n *\r\n * @interfaces\r\n * DynamicLinksOptions\r\n */\r\n@Plugin({\r\n  pluginName: 'FirebaseDynamicLinks',\r\n  plugin: ' cordova-plugin-firebase-dynamiclinks',\r\n  pluginRef: 'cordova.plugins.firebase.dynamiclinks',\r\n  repo: 'https://github.com/chemerisuk/cordova-plugin-firebase-dynamiclinks',\r\n  install: 'ionic cordova plugin add cordova-plugin-firebase-dynamiclinks --save --variable APP_DOMAIN=\"example.com\" --variable APP_PATH=\"/\"',\r\n  installVariables: ['APP_DOMAIN', 'APP_PATH'],\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class FirebaseDynamicLinks extends IonicNativePlugin {\r\n\r\n  /**\r\n   * Registers callback that is triggered on each dynamic link click.\r\n   * @return {Promise<any>} Returns a promise\r\n   */\r\n  @Cordova()\r\n  onDynamicLink(): Promise<any> { return; }\r\n\r\n  /**\r\n   * Display invitation dialog.\r\n   * @param options {DynamicLinksOptions} Some param to configure something\r\n   * @return {Promise<any>} Returns a promise\r\n   */\r\n  @Cordova()\r\n  sendInvitation(options: DynamicLinksOptions): Promise<any> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}